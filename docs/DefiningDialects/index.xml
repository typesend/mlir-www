<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Defining Dialects on MLIR</title><link>https://mlir.llvm.org/docs/DefiningDialects/</link><description>Recent content in Defining Dialects on MLIR</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0000</lastBuildDate><atom:link href="https://mlir.llvm.org/docs/DefiningDialects/index.xml" rel="self" type="application/rss+xml"/><item><title>Defining Dialect Attributes and Types</title><link>https://mlir.llvm.org/docs/DefiningDialects/AttributesAndTypes/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://mlir.llvm.org/docs/DefiningDialects/AttributesAndTypes/</guid><description>This document describes how to define dialect attributes and types.
LangRef Refresher Attributes Types Attributes and Types Adding a new Attribute or Type definition Class Name Documentation Mnemonic Parameters Traits Interfaces Builders Parsing and Printing Verification Storage Classes Mutable attributes and types Extra declarations Registering with the Dialect LangRef Refresher Before diving into how to define these constructs, below is a quick refresher from the MLIR LangRef.</description></item><item><title>Operation Definition Specification (ODS)</title><link>https://mlir.llvm.org/docs/DefiningDialects/Operations/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://mlir.llvm.org/docs/DefiningDialects/Operations/</guid><description>In addition to specializing the mlir::Op C++ template, MLIR also supports defining operations and data types in a table-driven manner. This is achieved via TableGen, which is both a generic language and its tooling to maintain records of domain-specific information. Facts regarding an operation are specified concisely into a TableGen record, which will be expanded into an equivalent mlir::Op C++ template specialization at compiler build time.
This manual explains in detail all the available mechanisms for defining operations in such a table-driven manner.</description></item></channel></rss>