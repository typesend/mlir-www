<map id="mlir::TypeConverter" name="mlir::TypeConverter">
<area shape="rect" id="node1" title="Type conversion class." alt="" coords="5,231,156,257"/>
<area shape="rect" id="node2" href="$classmlir_1_1LLVMTypeConverter.html" title="Conversion from types to the LLVM IR dialect." alt="" coords="217,5,401,32"/>
<area shape="rect" id="node3" href="$classmlir_1_1OneToNTypeConverter.html" title="Extends TypeConverter with 1:N target materializations." alt="" coords="209,56,409,83"/>
<area shape="rect" id="node4" href="$classmlir_1_1SPIRVTypeConverter.html" title="Type conversion from builtin types to SPIR&#45;V types for shader interface." alt="" coords="215,107,403,133"/>
<area shape="rect" id="node5" href="$classmlir_1_1SparseTensorTypeToBufferConverter.html" title="Sparse tensor type converter into an actual buffer." alt="" coords="216,158,403,199"/>
<area shape="rect" id="node6" href="$classmlir_1_1SparseTensorTypeToPtrConverter.html" title="Sparse tensor type converter into an opaque pointer." alt="" coords="216,223,403,265"/>
<area shape="rect" id="node7" href="$classmlir_1_1StorageSpecifierToLLVMTypeConverter.html" title=" " alt="" coords="221,289,397,330"/>
<area shape="rect" id="node8" href="$classmlir_1_1arith_1_1WideIntEmulationConverter.html" title="Converts integer types that are too wide for the target by splitting them in two halves and thus turn..." alt="" coords="204,354,415,395"/>
<area shape="rect" id="node9" href="$classmlir_1_1bufferization_1_1BufferizeTypeConverter.html" title="A helper type converter class that automatically populates the relevant materializations and type con..." alt="" coords="218,419,401,461"/>
<area shape="rect" id="node10" href="$classmlir_1_1spirv_1_1MemorySpaceToStorageClassConverter.html" title="Type converter for converting numeric MemRef memory spaces into SPIR&#45;V symbolic ones." alt="" coords="215,485,403,526"/>
</map>
